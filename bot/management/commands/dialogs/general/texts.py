from django.utils import timezone


async def start(BotUser, user, bot):
    return (", —ç—Ç–æ –±–æ—Ç –¥–ª—è <b>–ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –Ω–∞ –º–∞—Ç—á–∏ –ø–æ Dota 2 ü•≥</b>\n"
            f"–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π {BotUser.objects.count()}\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–∞—Ç—å –¥—Ä—É–∑–µ–π –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ:\n"
            f"https://t.me/{(await bot.me).username}?start={user.id}\n\n"
            "–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –º–∞—Ç—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: /matches")


async def help():
    return ("–í—ã –º–æ–∂–µ—Ç–µ:\n"
            "1)–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è: /help\n\n"
            "2)–ú–∞—Ç—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: /matches\n\n"
            "3)–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: /statistics(–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)\n\n"
            "4)–ü—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã–µ –¥—Ä—É–∑–µ–π: /referrals\n\n"
            "5)–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: /link")


async def link(BotUser, bot, msg_or_clb):
    return (f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–∞—Ç—å –¥—Ä—É–∑–µ–π –ø–æ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ:\n"
            f"https://t.me/{(await bot.me).username}?start={BotUser.objects.get(tg_id=msg_or_clb.chat.id).id}")


async def matches(game):
    a = len(f"{game.team1.name}") - 2
    b = len(f"{game.team2.name}") - 2
    texta = "\t" * a
    textb = "\t" * b
    return (f"<code>{game.team1} {game.format} {game.team2}\n</code>"
            f"<code>{game.predict}%{texta}{game.format}{textb}{100 - game.predict}%\n</code>"
            f"<code>{game.tournament.name}\n</code>"
            f"<code>–ù–∞—á–∞–ª–æ: {timezone.localtime(game.starttime).strftime('%d.%m.%Y %H-%M')}\n\n\n</code>")


async def stat(Statistic):
    statistic = Statistic.objects.get()
    safe, risk, unpred, all = 0, 0, 0, 0
    if statistic.bet_all != 0:
        all = ((statistic.all_bet_successful / statistic.bet_all) * 100) // 1
    if statistic.safe_bet_all != 0:
        safe = ((statistic.safe_bet_successful / statistic.safe_bet_all) * 100) // 1
    if statistic.risk_bet_all != 0:
        risk = ((statistic.risk_bet_successful / statistic.risk_bet_all) * 100) // 1
    if statistic.unpredictable_bet_all != 0:
        unpred = ((statistic.unpredictable_bet_successful / statistic.unpredictable_bet_all) * 100) // 1
    return (f"–í—Å–µ–≥–æ —Å—Ç–∞–≤–æ–∫:                            {statistic.all_bet_successful} / {statistic.bet_all} {all}%\n"
            f"–ù–∞–¥—ë–∂–Ω—ã–µ —Å—Ç–∞–≤–∫–∏:                  {statistic.safe_bet_successful} / {statistic.safe_bet_all} {safe}%\n"
            f"–†–∏—Å–∫–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞–≤–∫–∏:            {statistic.risk_bet_successful} / {statistic.risk_bet_all} {risk}%\n"
            f"–ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ —Å—Ç–∞–≤–∫–∏: {statistic.unpredictable_bet_successful} / {statistic.unpredictable_bet_all} {unpred}%\n")
